<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mzhotel.sm.resource.mapper.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.mzhotel.sm.resource.dto.Resource" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="RESOURCE_NAME" property="resourceName" jdbcType="VARCHAR" />
    <result column="RESOURCE_CODE" property="resourceCode" jdbcType="VARCHAR" />
    <result column="RESOURCE_TYPE" property="resourceType" jdbcType="VARCHAR" />
    <result column="URL" property="url" jdbcType="VARCHAR" />
    <result column="RESOURCE_PARENT" property="resourceParent" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="ORDER_NO" property="orderNo" jdbcType="DECIMAL" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="DATE" />
    <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
    <result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, RESOURCE_NAME, RESOURCE_CODE, RESOURCE_TYPE, URL, RESOURCE_PARENT, STATE,
    ORDER_NO, REMARK, CREATED_BY, CREATED_DATE, UPDATED_BY, UPDATED_DATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mzhotel.sm.resource.dto.Resource" >
    <selectKey keyProperty="id" resultType="java.lang.String" keyColumn="id" order="BEFORE">
      select uuid() from dual
    </selectKey>
    insert into T_RESOURCE (ID, RESOURCE_NAME, RESOURCE_CODE, 
      RESOURCE_TYPE, URL, RESOURCE_PARENT, STATE, ORDER_NO,
      REMARK, CREATED_BY, CREATED_DATE, 
      UPDATED_BY, UPDATED_DATE)
    values (#{id,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{resourceCode,jdbcType=VARCHAR}, 
      #{resourceType,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{resourceParent,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{orderNo,jdbcType=DECIMAL},
      #{remark,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=DATE}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.mzhotel.sm.resource.dto.Resource" >
    <selectKey keyProperty="id" resultType="java.lang.String" keyColumn="id" order="BEFORE">
      select uuid() from dual
    </selectKey>
    insert into T_RESOURCE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="resourceName != null" >
        RESOURCE_NAME,
      </if>
      <if test="resourceCode != null" >
        RESOURCE_CODE,
      </if>
      <if test="resourceType != null" >
        RESOURCE_TYPE,
      </if>
      <if test="url != null" >
        URL,
      </if>
      <if test="resourceParent != null" >
        RESOURCE_PARENT,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createdBy != null" >
        CREATED_BY,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY,
      </if>
      <if test="updatedDate != null" >
        UPDATED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceCode != null" >
        #{resourceCode,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="resourceParent != null" >
        #{resourceParent,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=DATE},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null" >
        #{updatedDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mzhotel.sm.resource.dto.Resource" >
    update T_RESOURCE
    <set >
      <if test="resourceName != null" >
        RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceCode != null" >
        RESOURCE_CODE = #{resourceCode,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        RESOURCE_TYPE = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="resourceParent != null" >
        RESOURCE_PARENT = #{resourceParent,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        ORDER_NO = #{orderNo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        CREATED_DATE = #{createdDate,jdbcType=DATE},
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null" >
        UPDATED_DATE = #{updatedDate,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mzhotel.sm.resource.dto.Resource" >
    update T_RESOURCE
    set RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
      RESOURCE_CODE = #{resourceCode,jdbcType=VARCHAR},
      RESOURCE_TYPE = #{resourceType,jdbcType=VARCHAR},
      URL = #{url,jdbcType=VARCHAR},
      RESOURCE_PARENT = #{resourceParent,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=DATE},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_DATE = #{updatedDate,jdbcType=DATE}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getResource" parameterType="com.mzhotel.sm.resource.dto.QueryResource"
          resultType="com.mzhotel.sm.resource.dto.Resource">
    select
    t.*,
    created.username createdName,
    updated.username updatedName,
    info.SAVE_NAME saveName
    from T_RESOURCE t
    left join t_user created on created.user_id = t.created_by
    left join t_user updated on updated.user_id = t.updated_by
    left join T_DOCUMENT_INFO_RELATION relation on relation.RELATION_ID = t.id and relation.RELATION_TYPE='RESOURCE'
    left join T_DOCUMENT_INFO info on info.id = relation.DOCUMENT_ID
    <where>
      <if test="id">
        and id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="resourceName != null and resourceName != ''">
           and t.RESOURCE_NAME like concat('%',#{resourceName},'%')
      </if>
    </where>
  </select>
</mapper>